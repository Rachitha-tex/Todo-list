{"version":3,"sources":["components/Form.js","components/Todo.js","components/TodoList.js","App.js","reportWebVitals.js","index.js"],"names":["Form","setText","todos","setTodos","text","setStatus","value","type","className","onChange","e","target","onClick","preventDefault","completed","id","Math","random","name","Todo","todo","map","item","filter","el","TodoList","filterTodo","App","useState","status","setFilterTodo","useEffect","getLocals","filterHandler","saveLocal","localStorage","setItem","JSON","stringify","getItem","locals","parse","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d955ab1d.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Form= ({setText,todos,setTodos,text,setStatus})=>{\r\n\r\nconst inputHandler = (e) =>{\r\n    setText(e.target.value);\r\n} \r\nconst submitHandler=(e) =>{\r\ne.preventDefault();\r\nsetTodos([\r\n    ...todos,{text:text,completed:false,id:Math.random()*1000}\r\n]);\r\nsetText(\"\");\r\n}  \r\n\r\nconst statusHandler=(e)=>{\r\n    setStatus(e.target.value)\r\n}\r\n\r\n    return (\r\n      <form>\r\n          <input value ={text} type=\"text\" className=\"todo-innput\" onChange={inputHandler}  />\r\n          <button onClick = {submitHandler} className=\"todo-button\" type=\"submit\"><i className=\"fa fa-plus-square\"></i></button> \r\n\r\n          <div className=\"select\">\r\n            <select onChange={statusHandler} name=\"todos\" className=\"filter-todo\">\r\n                <option value=\"all\">All</option>\r\n                <option value=\"completed\">Completed</option>  \r\n                <option value=\"uncompleted\">Uncompleted</option>\r\n                </select> \r\n          </div>\r\n      </form>\r\n    )\r\n}\r\n\r\nexport default Form\r\n","import React from 'react'\r\n\r\nfunction Todo({text,todos,setTodos,todo}) {\r\n\r\nconst deleteHandler = () =>{\r\nsetTodos(todos.filter((el)=>el.id !== todo.id))\r\n} \r\nconst completeHandler=()=>{\r\n    setTodos(todos.map(item=>{\r\n        if(item.id===todo.id){\r\n            return{\r\n                ...item,completed:!item.completed\r\n            }\r\n        }\r\n        return item\r\n    }))\r\n}\r\n    return (\r\n        <div className = \"todo\">\r\n            <li className = {`todo-item ${todo.completed ?\"completed\" :''}`}>{text}</li>\r\n            <button onClick={completeHandler} className = \"complete-btn\"><i className = \"fas fa-check\"></i></button>\r\n            <button className = \"trash-btn\" onClick={deleteHandler}><i className = \"fas fa-trash\"></i></button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Todo\r\n","import React from 'react'\r\nimport Todo from './Todo'\r\n\r\nconst TodoList = ({todos,setTodos,filterTodo})=> {\r\n    return (\r\n        <div className=\"todo-container\">\r\n            <ul className=\"todo-list\">\r\n                {\r\n                    filterTodo.map((todo) =>{\r\n                     return(\r\n                         <Todo key = {todo.id} text = {todo.text} todos = {todos} setTodos = {setTodos} todo = {todo}/>\r\n                     )\r\n                    })\r\n                }\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TodoList\r\n","import React,{useState,useEffect} from 'react'\nimport \"./App.css\"\nimport Form from './components/Form'\nimport TodoList from './components/TodoList'\nconst App=()=> {\n\nconst[text,setText] = useState(\"\")\nconst[todos,setTodos]=useState([])  \nconst[status,setStatus]=useState('all')  \nconst[filterTodo,setFilterTodo]=useState([]);\n\n\nuseEffect(()=>{\n  getLocals()\n  },[]\n  )\nuseEffect(()=>{\nfilterHandler();\nsaveLocal();\n},[status,todos])\n\n\nconst filterHandler=()=>{\n  switch(status){\n    case \"completed\":\n      setFilterTodo(todos.filter((todo)=>todo.completed===true))\n      break;\n      case \"uncompleted\":\n        setFilterTodo(todos.filter((todo)=>todo.completed===false))\n        break;\n        default:\n          setFilterTodo(todos);\n          break;\n  }\n}\n\n//save to local storage\nconst saveLocal=()=>{\n    localStorage.setItem('todos',JSON.stringify(todos))\n  }\n\n\n//get locals\nconst getLocals=()=>{\n  if(localStorage.getItem('todos')===null){\n    localStorage.setItem('todos',JSON.stringify([]));\n  }else{\n   let locals= JSON.parse(localStorage.getItem(\"todos\"));\n   setTodos(locals)\n  }\n}\n\n\nreturn (\n    <div className=\"App\">\n      <header>\n        <h2>My Own Todo List</h2>\n      </header>\n<Form setText={setText} text = {text} todos = {todos} setTodos = {setTodos} setStatus={setStatus}/>\n<TodoList setTodos = {setTodos } todos = {todos} filterTodo={filterTodo}/>\n    </div>\n  )\n}\n\nexport default App\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}